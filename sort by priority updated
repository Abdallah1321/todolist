void TaskManagement::priority_sort_by_high() {
    if (list1.empty())
    {
        for (const auto& item : list){
            list1.push_back(item);
        }
    }
    list.clear();

    for (auto i : list1)
        if (i.priority() == "3") {
            list.push_back(i);
        }
    for (auto i : list1)
        if (i.priority() == "2") {
            list.push_back(i);
        }
    for (auto i : list1)
        if (i.priority() == "1") {
            list.push_back(i);
        }
    for (auto i : list1)
        if (i.priority() == "0" || i.priority().empty()) {
            list.push_back(i);
        }
    FileManagement::write();
}

void TaskManagement::priority_sort_by_low() {
    if (list1.empty())
    {
        for (const auto& item : list){
            list1.push_back(item);
        }
    }

    list.clear();

    for (auto i : list1)
        if (i.priority() == "0" || i.priority().empty()) {
            list.push_back(i);
        }
    for (auto i : list1)
        if (i.priority() == "1") {
            list.push_back(i);
        }
    for (auto i : list1)
        if (i.priority() == "2") {
            list.push_back(i);
        }
    for (auto i : list1)
        if (i.priority() == "3") {
            list.push_back(i);
        }
    FileManagement::write();
}

bool TaskManagement::restore_list()
{
    if (list1.empty())
        return false;
    else
    {
        list.clear();
        for (const auto& item : list1){
            list.push_back(item);
        }
        FileManagement::write();
        return true;
    }
}
