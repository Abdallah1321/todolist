#include <iostream>

using namespace std;

using namespace std;
 
void sortbylow()
{
    cout << endl;
    

    const int width = 40;
    organize();

    int n = 0;
    for (auto &i : list)
        if (i == '0')
        {
            cout << n + 1 << ") " << setw(width) << left << i.text() << setw(width) << (i.is_done() ? "Done" : "") << setw(width) << (i.getpriority()) << endl;
            ++n;
        }
    cout << setfill('-') << setw(width*2.5) << "-" << endl;
    cout << setfill(' ') << fixed;
    
    
    
    cout << endl;
    

    const int width = 40;
    organize();

    int n = 0;
    for (auto &i : list)
        if (i == '1')
        {
            cout << n + 1 << ") " << setw(width) << left << i.text() << setw(width) << (i.is_done() ? "Done" : "") << setw(width) << (i.getpriority()) << endl;
            ++n;
        }
    cout << setfill('-') << setw(width*2.5) << "-" << endl;
    cout << setfill(' ') << fixed;
    
    
    
    
    cout << endl;
    

    const int width = 40;
    organize();

    int n = 0;
    for (auto &i : list)
        if (i == '2')
        {
            cout << n + 1 << ") " << setw(width) << left << i.text() << setw(width) << (i.is_done() ? "Done" : "") << setw(width) << (i.getpriority()) << endl;
            ++n;
        }
    cout << setfill('-') << setw(width*2.5) << "-" << endl;
    cout << setfill(' ') << fixed;
    
    
    
    
    
    cout << endl;
    

    const int width = 40;
    organize();

    int n = 0;
    for (auto &i : list)
        if (i == '3')
        {
            cout << n + 1 << ") " << setw(width) << left << i.text() << setw(width) << (i.is_done() ? "Done" : "") << setw(width) << (i.getpriority()) << endl;
            ++n;
        }
    cout << setfill('-') << setw(width*2.5) << "-" << endl;
    cout << setfill(' ') << fixed;
}


void sortbyhigh()
{
    cout << endl;
    ;

    const int width = 40;
    organize();

    int n = 0;
    for (auto& i : list)
        if (i == '3')
        {
            cout << n + 1 << ") " << setw(width) << left << i.text() << setw(width) << (i.is_done() ? "Done" : "") << setw(width) << (i.getpriority()) << endl;
            ++n;
        }
    cout << setfill('-') << setw(width * 2.5) << "-" << endl;
    cout << setfill(' ') << fixed;



    cout << endl;
    

    const int width = 40;
    organize();

    int n = 0;
    for (auto& i : list)
        if (i == '2')
        {
            cout << n + 1 << ") " << setw(width) << left << i.text() << setw(width) << (i.is_done() ? "Done" : "") << setw(width) << (i.getpriority()) << endl;
            ++n;
        }
    cout << setfill('-') << setw(width * 2.5) << "-" << endl;
    cout << setfill(' ') << fixed;




    cout << endl;
    

    const int width = 40;
    organize();

    int n = 0;
    for (auto& i : list)
        if (i == '1')
        {
            cout << n + 1 << ") " << setw(width) << left << i.text() << setw(width) << (i.is_done() ? "Done" : "") << setw(width) << (i.getpriority()) << endl;
            ++n;
        }
    cout << setfill('-') << setw(width * 2.5) << "-" << endl;
    cout << setfill(' ') << fixed;





    cout << endl;
    

    const int width = 40;
    organize();

    int n = 0;
    for (auto& i : list)
        if (i == '0')
        {
            cout << n + 1 << ") " << setw(width) << left << i.text() << setw(width) << (i.is_done() ? "Done" : "") << setw(width) << (i.getpriority()) << endl;
            ++n;
        }
    cout << setfill('-') << setw(width * 2.5) << "-" << endl;
    cout << setfill(' ') << fixed;
}
